name: CI Build

on:
  pull_request:
    paths-ignore:
      - '*.commits'
      - '*.markdown'
      - '**/*.markdown'

env:
  LC_ALL: en_US.UTF-8

jobs:
  CheckSourceFormatting:
    name: Check source formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
          cache: gradle

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        shell: bash
        run: |
          ./gradlew --no-daemon checkSourceFormatting
 
  LinuxJDK8:
    name: Linux JDK8
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
          cache: gradle

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        shell: bash
        env:
          GITHUB_CI: "true"
        run: |
          ./run-tests.sh

      - name: Upload tests zip
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: LinuxJDK8-tests.zip
          path: tests.zip

      - name: Run reporter
        uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          label: "Linux JDK8 test reports"
          report: "**/TEST-*.xml"
          token: "7793a209-c075-4644-9bdb-9205dbe5c4e7"

  LinuxJDK11:
    name: Linux JDK11
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'
          cache: gradle

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        shell: bash
        env:
          GITHUB_CI: "true"
        run: |
          ./run-tests.sh

      - name: Upload tests zip
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: LinuxJDK11-tests.zip
          path: tests.zip

      - name: Run reporter
        uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          label: "Linux JDK11 test reports"
          report: "**/TEST-*.xml"
          token: "7793a209-c075-4644-9bdb-9205dbe5c4e7"
 
  MacOSJDK11:
    name: MacOS JDK11
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'
          cache: gradle

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        shell: bash
        env:
          GITHUB_CI: "true"
        run: |
          ./run-tests.sh

      - name: Upload tests zip
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: MacOSJDK11-tests.zip
          path: tests.zip

      - name: Run reporter
        uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          label: "MacOS JDK8 test reports"
          report: "**/TEST-*.xml"
          token: "7793a209-c075-4644-9bdb-9205dbe5c4e7"

  # WindowsJDK11:
  #   name: Windows JDK11
  #   runs-on: windows-latest
  #   timeout-minutes: 60
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup Java 11
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: 11
  #         distribution: 'zulu'
  #         cache: gradle

  #     - name: Cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.gradle/caches
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - name: Build
  #       shell: bash
  #       env:
  #         GITHUB_CI: "true"
  #       run: |
  #         ./run-tests.bat

  #     - name: Upload tests zip
  #       uses: actions/upload-artifact@v3
  #       if: failure()
  #       with:
  #         name: WindowsJDK11-tests.zip
  #         path: tests.zip

  #     - name: Run reporter
  #       uses: check-run-reporter/action@v2.11.1
  #       if: ${{ always() }}
  #       with:
  #         label: "Windows JDK11 test reports"
  #         report: "**/TEST-*.xml"
  #         token: "7793a209-c075-4644-9bdb-9205dbe5c4e7"